/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.util.Date;
import java.text.ParseException;
import javax.swing.JOptionPane;

/**
 *
 * @author jespe
 */
public class AgentFrame extends javax.swing.JFrame {

    private InfDB idb;
    private String agent;

    public AgentFrame(InfDB idb, String namn) {
        this.idb = idb;
        initComponents();
        agent = namn;
        inloggadAgentNamnLBL.setText("Välkommen " + namn);

        endDateLabel.setVisible(false);
        endDateTF.setVisible(false);
        startDateLabel.setVisible(false);
        startDateTF.setVisible(false);
        fyllListorOchCB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        homePanel = new javax.swing.JPanel();
        inloggadAgentNamnLBL = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gammaltLosenordTF = new javax.swing.JTextField();
        nyttLosenordTF = new javax.swing.JTextField();
        nyttLosenordTestTF = new javax.swing.JTextField();
        bytLosenordBTN = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        aliensPanel = new javax.swing.JPanel();
        typCB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        alienListLST = new javax.swing.JList<>();
        valCB = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        startDateTF = new javax.swing.JTextField();
        startDateLabel = new javax.swing.JLabel();
        endDateLabel = new javax.swing.JLabel();
        endDateTF = new javax.swing.JTextField();
        alienIDTF = new javax.swing.JTextField();
        alienNamnTF = new javax.swing.JTextField();
        alienLosenordTF = new javax.swing.JTextField();
        alienRegistreringsdatumTF = new javax.swing.JTextField();
        alienTelefonTF = new javax.swing.JTextField();
        alienPlatsTF = new javax.swing.JTextField();
        alienAnsvarigAgentTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        andraAlienBTN = new javax.swing.JButton();
        alienRasCB = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        registrereaAlienJPanel = new javax.swing.JPanel();
        nyAlienNamnTF = new javax.swing.JTextField();
        nyAlienLosenordTF = new javax.swing.JTextField();
        nyAlienTelefonTF = new javax.swing.JTextField();
        nyAlienPlatsCB = new javax.swing.JComboBox<>();
        nyAlienAACB = new javax.swing.JComboBox<>();
        laggTillAlienBTN = new javax.swing.JButton();
        nyAlienRasCB = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        omradenJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        omradeList = new javax.swing.JList<>();
        laggTillVerktygPanel = new javax.swing.JPanel();
        verktygsNamnTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        laggTillVerktygBTN = new javax.swing.JButton();
        utrustningsTypCB = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inloggadAgentNamnLBL.setText("Namn");

        jLabel1.setText("Topp agenter");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Byt lösenord:");

        bytLosenordBTN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bytLosenordBTN.setText("Byt lösenord");
        bytLosenordBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bytLosenordBTNActionPerformed(evt);
            }
        });

        jLabel12.setText("Gammalt lösenord");

        jLabel13.setText("Nytt lösenord");

        jLabel14.setText("Skriv igen");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inloggadAgentNamnLBL, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 716, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bytLosenordBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nyttLosenordTestTF, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nyttLosenordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gammaltLosenordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inloggadAgentNamnLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gammaltLosenordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nyttLosenordTF, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nyttLosenordTestTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(bytLosenordBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );

        jTabbedPane1.addTab("Home", homePanel);

        typCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ras", "Område", "Datum" }));
        typCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typCBActionPerformed(evt);
            }
        });

        alienListLST.setToolTipText("");
        alienListLST.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alienListLSTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(alienListLST);

        valCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Squid", "Worm", "Boglodite" }));

        searchButton.setText("Sök");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        startDateTF.setText("2009-12-10");

        startDateLabel.setText("Startdate: ");

        endDateLabel.setText("Enddate:");

        endDateTF.setText("2010-10-10");

        alienIDTF.setEditable(false);

        alienNamnTF.setEditable(false);

        alienLosenordTF.setEditable(false);

        alienRegistreringsdatumTF.setEditable(false);

        alienTelefonTF.setEditable(false);

        alienPlatsTF.setEditable(false);

        alienAnsvarigAgentTF.setEditable(false);

        jLabel3.setText("Alien_ID:");

        jLabel4.setText("Registreringsdatum:");

        jLabel5.setText("Lösenord:");

        jLabel6.setText("Namn:");

        jLabel7.setText("Telefon:");

        jLabel8.setText("Plats:");

        jLabel9.setText("Ansvarig Agent: ");

        andraAlienBTN.setText("Ändra information");
        andraAlienBTN.setEnabled(false);
        andraAlienBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andraAlienBTNActionPerformed(evt);
            }
        });

        alienRasCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Squid", "Worm", "Boglodite" }));
        alienRasCB.setEnabled(false);

        jLabel11.setText("Ras");

        javax.swing.GroupLayout aliensPanelLayout = new javax.swing.GroupLayout(aliensPanel);
        aliensPanel.setLayout(aliensPanelLayout);
        aliensPanelLayout.setHorizontalGroup(
            aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aliensPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(typCB, 0, 102, Short.MAX_VALUE))
                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aliensPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(aliensPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(valCB, 0, 102, Short.MAX_VALUE)
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startDateLabel)
                            .addComponent(startDateTF)
                            .addComponent(endDateLabel)
                            .addComponent(endDateTF))
                        .addGap(198, 198, 198)
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(53, 53, 53)))
                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(alienRegistreringsdatumTF)
                    .addComponent(alienRasCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alienNamnTF, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alienIDTF, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alienAnsvarigAgentTF, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alienPlatsTF, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alienTelefonTF, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(andraAlienBTN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(alienLosenordTF))
                .addContainerGap(410, Short.MAX_VALUE))
        );
        aliensPanelLayout.setVerticalGroup(
            aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aliensPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(aliensPanelLayout.createSequentialGroup()
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(aliensPanelLayout.createSequentialGroup()
                                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchButton)
                                        .addComponent(alienIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(aliensPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(startDateLabel))
                                    .addGroup(aliensPanelLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel6))))
                            .addComponent(alienNamnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alienLosenordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(alienRegistreringsdatumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(aliensPanelLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(endDateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(endDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(aliensPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(alienTelefonTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(alienPlatsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alienAnsvarigAgentTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(aliensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(alienRasCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(41, 41, 41)
                        .addComponent(andraAlienBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Aliens", aliensPanel);

        nyAlienNamnTF.setText("Namn");

        nyAlienLosenordTF.setText("Lösenord");

        nyAlienTelefonTF.setText("Telefon");

        laggTillAlienBTN.setText("Registrera");
        laggTillAlienBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laggTillAlienBTNActionPerformed(evt);
            }
        });

        nyAlienRasCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Squid", "Boglodite", "Worm" }));

        jLabel15.setText("Namn");

        jLabel16.setText("Lösenord");

        jLabel17.setText("Telefon");

        jLabel18.setText("Plats");

        jLabel19.setText("Ansvarig agent");

        jLabel20.setText("Ras");

        javax.swing.GroupLayout registrereaAlienJPanelLayout = new javax.swing.GroupLayout(registrereaAlienJPanel);
        registrereaAlienJPanel.setLayout(registrereaAlienJPanelLayout);
        registrereaAlienJPanelLayout.setHorizontalGroup(
            registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrereaAlienJPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(registrereaAlienJPanelLayout.createSequentialGroup()
                        .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addGap(124, 124, 124)
                        .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nyAlienNamnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nyAlienLosenordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nyAlienTelefonTF, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nyAlienPlatsCB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nyAlienRasCB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nyAlienAACB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(laggTillAlienBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(711, Short.MAX_VALUE))
        );
        registrereaAlienJPanelLayout.setVerticalGroup(
            registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registrereaAlienJPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(registrereaAlienJPanelLayout.createSequentialGroup()
                        .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nyAlienNamnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nyAlienLosenordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nyAlienTelefonTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nyAlienPlatsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nyAlienAACB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registrereaAlienJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nyAlienRasCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(52, 52, 52)
                .addComponent(laggTillAlienBTN)
                .addContainerGap(236, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registrerea ny alien", registrereaAlienJPanel);

        omradeList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(omradeList);

        javax.swing.GroupLayout omradenJPanelLayout = new javax.swing.GroupLayout(omradenJPanel);
        omradenJPanel.setLayout(omradenJPanelLayout);
        omradenJPanelLayout.setHorizontalGroup(
            omradenJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(omradenJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(888, Short.MAX_VALUE))
        );
        omradenJPanelLayout.setVerticalGroup(
            omradenJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(omradenJPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Områden", omradenJPanel);

        laggTillVerktygPanel.setToolTipText("");

        verktygsNamnTF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Namn :");

        laggTillVerktygBTN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        laggTillVerktygBTN.setText("Lägg  till ");
        laggTillVerktygBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laggTillVerktygBTNActionPerformed(evt);
            }
        });

        utrustningsTypCB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        utrustningsTypCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel21.setText("Typ :");

        javax.swing.GroupLayout laggTillVerktygPanelLayout = new javax.swing.GroupLayout(laggTillVerktygPanel);
        laggTillVerktygPanel.setLayout(laggTillVerktygPanelLayout);
        laggTillVerktygPanelLayout.setHorizontalGroup(
            laggTillVerktygPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laggTillVerktygPanelLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(laggTillVerktygPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(laggTillVerktygPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(laggTillVerktygBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(verktygsNamnTF, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(utrustningsTypCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(640, Short.MAX_VALUE))
        );
        laggTillVerktygPanelLayout.setVerticalGroup(
            laggTillVerktygPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laggTillVerktygPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(laggTillVerktygPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verktygsNamnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(laggTillVerktygPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(utrustningsTypCB, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(56, 56, 56)
                .addComponent(laggTillVerktygBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(302, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lägg till verktyg", laggTillVerktygPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fyllListorOchCB() {
        try {
            String query;

            // FYLLER LISTAN MED OMRÅDEN
            DefaultListModel omradeModelList = new DefaultListModel();
            omradeList.setModel(omradeModelList);

            omradeModelList.removeAllElements();
            query = "SELECT agent.`Namn`,omrade.`Benamning`"
                    + "     FROM agent"
                    + "     INNER JOIN omradeschef ON agent.`Agent_ID`=omradeschef.`Agent_ID` "
                    + "     INNER JOIN omrade ON omradeschef.`Omrade`=omrade.`Omrades_ID`";
            for (HashMap<String, String> omradeschef : idb.fetchRows(query)) {
                omradeModelList.addElement(omradeschef.get("Benamning") + "     Chef: " + omradeschef.get("Namn"));
            }

            // Fyller nyAlienAACB med agenter
            nyAlienAACB.removeAllItems();
            for (String namn : idb.fetchColumn("SELECT Namn FROM Agent")) {
                nyAlienAACB.addItem(namn);
            }
            // Fyller nyAlienPlatsCB med platser
            nyAlienPlatsCB.removeAllItems();
            for (String omrade : idb.fetchColumn("SELECT Benamning FROM plats")) {
                nyAlienPlatsCB.addItem(omrade);
            }

        } catch (InfException ex) {
            Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // returnerar rasen på den giva alienen                                                                                                                                                                                         
    private String getAlienRas(String inputID) {
        try {
            for (String alienID : idb.fetchColumn("SELECT Alien_ID FROM squid")) {
                if (alienID.contentEquals(inputID)) {
                    return "squid";
                }
            }

            for (String alienID : idb.fetchColumn("SELECT Alien_ID FROM worm")) {
                if (alienID.contentEquals(inputID)) {
                    return "worm";
                }
            }

            for (String alienID : idb.fetchColumn("SELECT Alien_ID FROM boglodite")) {
                if (alienID.contentEquals(inputID)) {
                    return "boglodite";
                }
            }
        } catch (InfException ex) {
            Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        return "";
    }

    private void typCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typCBActionPerformed
        // TODO add your handling code here:
        valCB.setVisible(true);
        endDateLabel.setVisible(false);
        endDateTF.setVisible(false);
        startDateLabel.setVisible(false);
        startDateTF.setVisible(false);
        valCB.removeAllItems();

        String typ = (String) typCB.getSelectedItem();

        try {

            switch (typ) {

                case "Område":
                    for (String omrade : idb.fetchColumn("SELECT Benamning FROM omrade")) {
                        valCB.addItem(omrade);
                    }
                    break;
                case "Ras":
                    valCB.addItem("Squid");
                    valCB.addItem("Boglodite");
                    valCB.addItem("Worm");
                    break;
                case "Datum":
                    endDateLabel.setVisible(true);
                    endDateTF.setVisible(true);
                    startDateLabel.setVisible(true);
                    startDateTF.setVisible(true);
                    valCB.setVisible(false);
                    break;
                default:

            }

        } catch (InfException ex) {
            Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_typCBActionPerformed

    // Koden för at söka efter aliens med de valda valen
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        DefaultListModel alienListModel = new DefaultListModel();
        alienListLST.setModel(alienListModel);
        alienListModel.clear();
        String query;
        String val = (String) valCB.getSelectedItem();
        try {
            // Tittar efter vilket "val" dvs: ras, område eller datum och gör om gränssnittet beroende på valet
            switch (typCB.getSelectedItem().toString()) {
                case "Ras" -> {
                    query = "SELECT Alien_ID FROM " + val.toLowerCase();
                    for (String id : idb.fetchColumn(query)) {
                        alienListModel.addElement(idb.fetchSingle("SELECT Namn FROM alien WHERE Alien_ID = " + id));
                    }
                }
                case "Område" -> {
                    query = "SELECT Namn,Alien_ID FROM Alien WHERE Plats = " + idb.fetchSingle("SELECT Omrades_ID FROM omrade WHERE Benamning = '" + val.toLowerCase() + "'");
                    for (HashMap<String, String> alien : idb.fetchRows(query)) {
                        alienListModel.addElement(alien.get("Namn"));
                    }
                }
                case "Datum" -> {
                    SimpleDateFormat format = new SimpleDateFormat("yyy-mm-dd");
                    Date startDate, endDate, alienDate;
                    startDate = format.parse(startDateTF.getText());
                    endDate = format.parse(endDateTF.getText());
                    query = "SELECT Namn,Registreringsdatum,Alien_ID FROM alien";
                    for (HashMap<String, String> alien : idb.fetchRows(query)) {

                        alienDate = format.parse(alien.get("Registreringsdatum"));

                        if (alienDate.getTime() >= startDate.getTime() && alienDate.getTime() < endDate.getTime()) {
                            alienListModel.addElement(alien.get("Namn"));
                        }
                    }
                }
            }

            if (!(alienListModel.getSize() > 0)) {
                JOptionPane.showMessageDialog(null, "Finns inga aliens efter den sökningen!");
            }

        } catch (InfException ex) {
            Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Något gick fel försök igen.");
        } catch (ParseException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Något gick fel försök igen.");
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void alienListLSTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alienListLSTMouseClicked
        // TODO add your handling code here:

        String selectedAlien = (String) alienListLST.getSelectedValue();

        if (selectedAlien != null) {

            String query = "SELECT * FROM alien WHERE Namn = '" + selectedAlien + "'";

            try {
                HashMap<String, String> alien = new HashMap<String, String>();
                alien = idb.fetchRow(query);

                String plats, ansvarigAgent;

                plats = idb.fetchSingle("SELECT Benamning FROM omrade WHERE Omrades_ID = " + alien.get("Plats"));

                ansvarigAgent = idb.fetchSingle("SELECT Namn FROM agent WHERE Agent_ID = " + alien.get("Ansvarig_Agent"));

                alienIDTF.setText(alien.get("Alien_ID"));
                alienNamnTF.setText(alien.get("Namn"));
                alienLosenordTF.setText(alien.get("Losenord"));
                alienRegistreringsdatumTF.setText(alien.get("Registreringsdatum"));
                alienTelefonTF.setText(alien.get("Telefon"));
                alienPlatsTF.setText(plats);
                alienAnsvarigAgentTF.setText(ansvarigAgent);
                System.out.println(getAlienRas(alien.get("Alien_ID")).substring(0, 1).toUpperCase() + getAlienRas(alien.get("Alien_ID")).substring(1));
                alienRasCB.setSelectedItem(getAlienRas(alien.get("Alien_ID")).substring(0, 1).toUpperCase() + getAlienRas(alien.get("Alien_ID")).substring(1));

                andraAlienBTN.setEnabled(true);
            } catch (InfException ex) {
                Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Något gick fel testa igen!");
            }

        }
    }//GEN-LAST:event_alienListLSTMouseClicked

    private void laggTillAlienBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laggTillAlienBTNActionPerformed
        // TODO add your handling code here:

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now = LocalDateTime.now();

        try {

            // Hämtar och sätter alla värden till den nya alienen
            String namn, losenord, date, telefon, ras;
            namn = nyAlienNamnTF.getText();
            losenord = nyAlienLosenordTF.getText();
            telefon = nyAlienTelefonTF.getText();
            date = dtf.format(now).replace('/', '-');
            ras = ((String) nyAlienRasCB.getSelectedItem()).toLowerCase();

            int id, plats, ansvarigAgent;
            id = Integer.valueOf(idb.fetchSingle("SELECT * FROM alien ORDER BY Alien_ID DESC")) + 1;
            plats = Integer.valueOf(idb.fetchSingle("SELECT Plats_ID FROM plats WHERE Benamning = '" + (String) nyAlienPlatsCB.getSelectedItem() + "'"));
            ansvarigAgent = Integer.valueOf(idb.fetchSingle("SELECT Agent_ID FROM agent WHERE Namn = '" + (String) nyAlienAACB.getSelectedItem() + "'"));

            // SQL frågan som kommer användas för att registrerea den nya alienen
            String query = String.format("INSERT INTO alien VALUES (%o, '%s', '%s', '%s', '%s' , %o, %o)",
                    id, date, losenord, namn, telefon, plats, ansvarigAgent);

            if (JOptionPane.showConfirmDialog(null, "Är du säkerpå att du vill lägga till den nya alienen: " + namn, "Ja",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Tillläggning har avbrutits.");
                return;
            }

            // Sätter in den angivna alienen i databasen
            idb.insert(query);

            // Bestämmer vilket antal armar/boogies som alienen ska ha beroende på dess ras
            query = switch (ras) {
                case "squid" ->
                    String.format("INSERT INTO %s VALUES (%o,%s)", ras, id, JOptionPane.showInputDialog("Hur många armar har den?"));
                case "boglodite" ->
                    String.format("INSERT INTO %s VALUES (%o ,%s)", ras, id, JOptionPane.showInputDialog("Hur många boogies har den?"));
                default ->
                    String.format("INSERT INTO %s VALUES (%o)", ras, id);
            };

            // Sätter in alien_id i den angivna tabellen med dess "antal"
            idb.insert(query);

            JOptionPane.showMessageDialog(null, "Alienen: " + namn + " Hhar bilivit tilaggd");

        } catch (InfException ex) {
            Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Något gick fel försök igen.");
        }
    }//GEN-LAST:event_laggTillAlienBTNActionPerformed

    // Byta lösenord knapp
    private void bytLosenordBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bytLosenordBTNActionPerformed
        // TODO add your handling code here:

        // Testar om alla fält är i fylda. Om de inte skulla vara det så avbryts lösenords bytningen
        if (gammaltLosenordTF.getText().equals("") || nyttLosenordTF.getText().equals("") || nyttLosenordTestTF.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Du måste fylla i alla fällt!");
            return;
        }

        try {

            String nyttLosenord = nyttLosenordTF.getText();

            // Testar om det nya lösenordet mtachar kontrollen annars avbryts lösenords bytningen
            if (!nyttLosenordTF.getText().equals(nyttLosenordTestTF.getText())) {
                JOptionPane.showMessageDialog(null, "Lösenorden mtachar inte försök igen!");
                return;
            }

            // Testar om det gammla lösenordet matchar det som finns i databasen om det inte skulle det så avbryts lösenords bytningen
            if (!idb.fetchSingle("SELECT Losenord FROM agent WHERE Namn = '" + agent + "'").equals(gammaltLosenordTF.getText())) {
                JOptionPane.showMessageDialog(null, "Du skrev in fel lösenord försök igen!");
                return;
            }

            if (JOptionPane.showConfirmDialog(null, "Är du säkerpå att du vill byta lösenord?", "Ja",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Bytning avbröts!");
            }
            String query = "UPDATE agent SET Losenord = '" + nyttLosenord + "' WHERE Namn = '" + agent + "'";
            idb.update(query); // Uppdaterar databasen
            JOptionPane.showMessageDialog(null, "Lösenord har nu bytits!");

        } catch (InfException ex) {
            Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Något gick fel försök igen.");
        }

    }//GEN-LAST:event_bytLosenordBTNActionPerformed

    private void andraAlienBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andraAlienBTNActionPerformed
        // TODO add your handling code here:
        boolean bool = !alienIDTF.isEditable();

        alienIDTF.setEditable(bool);
        alienNamnTF.setEditable(bool);
        alienLosenordTF.setEditable(bool);
        alienRegistreringsdatumTF.setEditable(bool);
        alienTelefonTF.setEditable(bool);
        alienPlatsTF.setEditable(bool);
        alienAnsvarigAgentTF.setEditable(bool);
        alienRasCB.setEnabled(bool);

        if (bool) {
            andraAlienBTN.setText("Bekräfta ändringar");
        } else {
            andraAlienBTN.setText("Ändra information");

            try {
                //Sätter värden 
                int alienID, plats, ansvarigAgent;
                alienID = Integer.valueOf(alienIDTF.getText());
                plats = Integer.valueOf(idb.fetchSingle("SELECT Omrades_ID FROM omrade WHERE Benamning = '" + alienPlatsTF.getText() + "'"));
                ansvarigAgent = Integer.valueOf(idb.fetchSingle("SELECT Agent_ID FROM agent WHERE Namn = '" + alienAnsvarigAgentTF.getText() + "'"));

                String registreringsdatum, losenord, namn, telefon, ras, nyRas;
                registreringsdatum = alienRegistreringsdatumTF.getText();
                losenord = alienLosenordTF.getText();
                namn = alienNamnTF.getText();
                telefon = alienTelefonTF.getText();
                ras = getAlienRas(String.valueOf(alienID));
                nyRas = alienRasCB.getSelectedItem().toString();

                // SQL Frågan som ska användas för att uppdatera databasen
                String query = String.format("UPDATE alien SET Alien_ID = %o, Registreringsdatum = '%s', Losenord = '%s', Namn = '%s', Telefon = '%s', Plats = %o, Ansvarig_Agent = %o WHERE Alien_ID = %o",
                        alienID, registreringsdatum, losenord, namn, telefon, plats, ansvarigAgent, alienID);

                if (JOptionPane.showConfirmDialog(null, "Är du säker på att du vill ändra alienen: " + namn, "Ja",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {
                    JOptionPane.showMessageDialog(null, "Ändring har avbrutits.");
                    return;
                }

                // Uppdaterar databasen för den valda alienen
                idb.update(query);

                // Tar bort den från dess ras tabel
                idb.delete("DELETE FROM " + ras + " WHERE Alien_ID = " + alienID);

                // Lägger in i den nya rasen
                switch (nyRas) {
                    case "Boglodite" -> {
                        String antalBoogies = JOptionPane.showInputDialog("Hur många boogies har den ?");
                        idb.insert("INSERT INTO boglodite "
                                + "Values(" + alienID + "," + antalBoogies + ")");
                    }
                    case "Squid" -> {
                        String antalArmar = JOptionPane.showInputDialog("Hur många armar har den ?");
                        idb.insert("INSERT INTO squid "
                                + "Values(" + alienID + "," + antalArmar + ")");
                    }
                    case "Worm" ->
                        idb.insert("INSERT INTO worm "
                                + "Values(" + alienID + ")");
                }
                JOptionPane.showMessageDialog(null, "Alienen har ändrats!");
            } catch (InfException ex) {
                Logger.getLogger(AgentFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_andraAlienBTNActionPerformed

    private void laggTillVerktygBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laggTillVerktygBTNActionPerformed
        // TODO add your handling code here:
         try {
            // Sparar verktygets ID och namn i två olik variabler
            int verktygsID = Integer.parseInt(idb.fetchSingle("Select max(Utrustnings_ID) from Utrustning")) + 1;
            String verktygsNamn = verktygsNamnTF.getText();
            String utrustningsTyp = utrustningsTypCB.getSelectedItem().toString().toLowerCase();
            if (JOptionPane.showConfirmDialog(null, "Är du säker på att du vill lägga till verktyget: " + verktygsNamn, "Ja",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Tillläggning har avbrutits.");
                return;
            }

            switch (utrustningsTyp) {
                case "vapen" -> {
                    String kaliber = JOptionPane.showInputDialog("Vilken kaliber har den?");
                    if (kaliber == null) return;

                    idb.insert("INSERT INTO vapen "
                            + "Values(" + verktygsID + "," + kaliber + ")");
                }
                case "kommunikation" -> {
                    String overforingsteknik = JOptionPane.showInputDialog("Vilken överföringsteknik har den??");
                    if(overforingsteknik == null) return;
                    idb.insert("INSERT INTO kommunikation "
                            + "Values(" + verktygsID + ", '" + overforingsteknik + "' )");
                }
                case "teknik" -> {
                    String kraftKalla = JOptionPane.showInputDialog("Vilken kraftkälla har den??");
                    if(kraftKalla == null) return;
                    idb.insert("INSERT INTO teknik "
                            + "Values(" + verktygsID + "," + kraftKalla + ")");
                }
            }

            // Sätter in givet verktyg i databaesn och skickar ut en bekräftelse om det funka eller inte
            idb.insert("Insert into Utrustning values('" + verktygsID + "','" + verktygsNamn + "')");
            verktygsNamnTF.setText("");
            JOptionPane.showMessageDialog(null, "Utrustningen " + verktygsNamn + " har registrerats");

        } catch (InfException ex) {

            JOptionPane.showMessageDialog(null, "Registrering misslyckades");

        }
    }//GEN-LAST:event_laggTillVerktygBTNActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        InfDB db;
        try {
            db = new InfDB("mibdb", "3306", "mibdba", "mibkey");

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new AgentFrame(db, "Agent O").setVisible(true);
                }
            });

        } catch (InfException ex) {
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alienAnsvarigAgentTF;
    private javax.swing.JTextField alienIDTF;
    private javax.swing.JList<String> alienListLST;
    private javax.swing.JTextField alienLosenordTF;
    private javax.swing.JTextField alienNamnTF;
    private javax.swing.JTextField alienPlatsTF;
    private javax.swing.JComboBox<String> alienRasCB;
    private javax.swing.JTextField alienRegistreringsdatumTF;
    private javax.swing.JTextField alienTelefonTF;
    private javax.swing.JPanel aliensPanel;
    private javax.swing.JButton andraAlienBTN;
    private javax.swing.JButton bytLosenordBTN;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JTextField endDateTF;
    private javax.swing.JTextField gammaltLosenordTF;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel inloggadAgentNamnLBL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton laggTillAlienBTN;
    private javax.swing.JButton laggTillVerktygBTN;
    private javax.swing.JPanel laggTillVerktygPanel;
    private javax.swing.JComboBox<String> nyAlienAACB;
    private javax.swing.JTextField nyAlienLosenordTF;
    private javax.swing.JTextField nyAlienNamnTF;
    private javax.swing.JComboBox<String> nyAlienPlatsCB;
    private javax.swing.JComboBox<String> nyAlienRasCB;
    private javax.swing.JTextField nyAlienTelefonTF;
    private javax.swing.JTextField nyttLosenordTF;
    private javax.swing.JTextField nyttLosenordTestTF;
    private javax.swing.JList<String> omradeList;
    private javax.swing.JPanel omradenJPanel;
    private javax.swing.JPanel registrereaAlienJPanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JTextField startDateTF;
    private javax.swing.JComboBox<String> typCB;
    private javax.swing.JComboBox<String> utrustningsTypCB;
    private javax.swing.JComboBox<String> valCB;
    private javax.swing.JTextField verktygsNamnTF;
    // End of variables declaration//GEN-END:variables
}
